h2. description

With django-dbpreferences you can store some app preferences into the database.

A django app defines a form with initial values. The form cleaned data dict would
be stored serialized into the database. The app can easy get the current preference
dict and the user can easy edit the values in the django admin panel.


h2. history

* v0.3.4
** Bugfix if help_text contains non ascii characters and html code
* v0.3.3
** validate preferences with model validation
** clean preferences in get_preferences()
* v0.3.2
** some bugfixes
* v0.3.1
** Bugfix if DictField can be null / DictFormField(required=False)
* v0.3.0
** separate field stuff from models.py into fields.py, so its usable in other projects, too.
** Use own dict class for serialize/deserialize
** Update unittest for new django admin url prefix
* v0.2.0
** Add UserSettings, see: http://www.jensdiemer.de/_command/118/blog/detail/64/ (de)
* v0.1.0
** first version cut out from PyLucid CMS - http://www.pylucid.org


h2. links

* homepage: http://code.google.com/p/django-dbpreferences/
* Sourcecode: http://github.com/jedie/django-dbpreferences
* PyPi: http://pypi.python.org/pypi/django-dbpreferences/

